FROM ros:humble-ros-base-jammy as base-install

ARG DEBIAN_FRONTEND="noninteractive"
ARG GIT_BRANCH=develop-humble

# Make sure bash catches errors (no need to chain commands with &&, use ; instead)
SHELL ["/bin/bash", "-o", "pipefail", "-o", "errexit", "-c"]

###########################
# 1.) Bring system up to the latest ROS desktop configuration
###########################
RUN apt-get -y update
RUN apt-get -y upgrade
RUN apt-get -y install ros-humble-desktop

###########################
# 2.) Temporarily remove ROS2 apt repository
###########################
RUN mv /etc/apt/sources.list.d/ros2-latest.list /root/
RUN apt-get update

###########################
# 3.) comment out the catkin conflict
###########################
RUN sed  -i -e 's|^Conflicts: catkin|#Conflicts: catkin|' /var/lib/dpkg/status
RUN apt-get install -f

###########################
# 4.) force install these packages
###########################
RUN apt-get download python3-catkin-pkg
RUN apt-get download python3-rospkg
RUN apt-get download python3-rosdistro
RUN dpkg --force-overwrite -i python3-catkin-pkg*.deb
RUN dpkg --force-overwrite -i python3-rospkg*.deb
RUN dpkg --force-overwrite -i python3-rosdistro*.deb
RUN apt-get install -f

###########################
# 5.) Install the latest ROS1 desktop configuration
# see https://packages.ubuntu.com/jammy/ros-desktop-dev
# note: ros-desktop-dev automatically includes tf tf2
###########################
RUN apt-get -y install ros-desktop-dev --allow-downgrades --allow-remove-essential --allow-change-held-packages

# fix ARM64 pkgconfig path issue -- Fix provided by ambrosekwok
RUN if [[ $(uname -m) = "arm64" || $(uname -m) = "aarch64" ]]; then                     \
      cp /usr/lib/x86_64-linux-gnu/pkgconfig/* /usr/lib/aarch64-linux-gnu/pkgconfig/;   \
    fi

###########################
# 6.) Restore the ROS2 apt repos and set compilation options.
###########################
RUN mv /root/ros2-latest.list /etc/apt/sources.list.d/
RUN apt-get -y update

###########################
# 6.1 Add additional grid-map messages
###########################

# RUN apt-get -y install libsdl1.2-dev libsdl-image1.2-dev; \
# git clone https://github.com/ros-planning/navigation.git; \
# cd navigation;                                            \
# git checkout noetic-devel;                                \
# unset ROS_DISTRO;                                         \
# time colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release \
#       --packages-select map_server voxel_grid costmap_2d;

# RUN git clone https://github.com/ros/filters.git;                 \
#       cd filters;                                                 \
#       git checkout noetic-devel;                                  \
#       unset ROS_DISTRO;                                           \
#       time colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release;

#RUN apt-get -y install liborocos-kdl-dev do we need this?
#       source navigation/install/setup.bash;                                             \
#       source filters/install/setup.bash;                                                \
#       git clone https://github.com/ANYbotics/grid_map.git;                              \
#       cd grid_map;                                                                      \
#       git checkout 1.6.4;                                                               \
#       unset ROS_DISTRO;                                                                 \
#       grep -r c++11 | grep CMakeLists | cut -f 1 -d ':' |                               \
#         xargs sed -i -e 's|std=c++11|std=c++17|g';                                      \
#       time colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release                         \
#         --packages-select grid_map_msgs grid_map_core grid_map_octomap grid_map_sdf     \
#         grid_map_costmap_2d grid_map_cv grid_map_ros grid_map_loader;

######################################
# 6.2) Compile custom message
######################################

RUN  mkdir -p /home/carma/.base-image/ros1_msgs_ws/src/carma_msgs
COPY . /home/carma/.base-image/ros1_msgs_ws/src/carma_msgs/
RUN  mkdir -p /home/carma/.base-image/ros2_msgs_ws/src/carma_msgs
COPY . /home/carma/.base-image/ros2_msgs_ws/src/carma_msgs/
RUN mkdir -p /home/carma/.base-image/workspace/src
RUN /home/carma/.base-image/ros1_msgs_ws/src/carma_msgs/docker/checkout.bash -b ${GIT_BRANCH} -r /home/carma/.base-image/workspace
RUN /home/carma/.base-image/ros1_msgs_ws/src/carma_msgs/docker/install.sh

RUN apt-get update && apt-get install -y \
      ros-humble-rmw \
      ros-humble-rmw-implementation \
      ros-humble-rmw-fastrtps-cpp \
      ros-humble-rmw-cyclonedds-cpp



RUN   mkdir -p /ros-humble-ros1-bridge/src;                                       \
      cd /ros-humble-ros1-bridge/src;      