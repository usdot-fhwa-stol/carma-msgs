#
# Copyright (C) 2021 LEIDOS.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#

cmake_minimum_required(VERSION 3.5)
project(carma_debug_msgs)

## Compile as C++14, supported in ROS Noetic and newer
add_compile_options(-std=c++14)

find_package(ros_environment REQUIRED)

set(ROS_VERSION $ENV{ROS_VERSION})
set(SUPPORTED_ROS_VERSION 1)

if(${ROS_VERSION} EQUAL ${SUPPORTED_ROS_VERSION})

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  message_generation
  std_msgs
  geometry_msgs
  cav_msgs
)


################################################
## Declare ROS messages, services and actions ##
################################################


file(GLOB msg_files msg/*.msg)
set(msgs )
foreach(filePath ${msg_files})
  get_filename_component(name ${filePath} NAME)
  set(msgs ${msgs} ${name})
endforeach(filePath)

## Generate messages in the 'msg' folder
add_message_files(
  FILES
  ${msgs}
)


## Generate added messages and services with any dependencies listed here
generate_messages(
  DEPENDENCIES
  std_msgs
  geometry_msgs
  cav_msgs
)

###################################
## catkin specific configuration ##
###################################

catkin_package(
 CATKIN_DEPENDS message_runtime std_msgs geometry_msgs cav_msgs
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(
  ${catkin_INCLUDE_DIRS}
)

else()

message("Skipping build of " ${PROJECT_NAME} " as only ROS " ${SUPPORTED_ROS_VERSION} " is supported. Detected version is ROS " ${ROS_VERSION})

endif()

